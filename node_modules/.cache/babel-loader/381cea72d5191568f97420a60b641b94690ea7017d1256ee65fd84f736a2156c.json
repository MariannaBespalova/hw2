{"ast":null,"code":"var _jsxFileName = \"/home/insight/incubator/Month2/HW2/src/s2-homeworks/hw01/friend-message/FriendMessage.tsx\";\nimport React from 'react';\nimport s from './FriendMessage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// создать тип вместо any и отобразить приходящие данные\nconst FriendMessage = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'hw1-friend-message-' + props.message.id,\n    className: s.friendMessage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.friendImageAndText,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: 'hw1-friend-avatar-' + props.message.id,\n        alt: props.message.user.name,\n        src: props.message.user.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.friendText,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: 'hw1-friend-name-' + props.message.id,\n          className: s.friendName,\n          children: props.message.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          id: 'hw1-friend-text-' + props.message.id,\n          className: s.friendMessageText,\n          children: props.message.message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'hw1-friend-time-' + props.message.id,\n      className: s.friendTime,\n      children: props.message.message.time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = FriendMessage;\nexport default FriendMessage;\nvar _c;\n$RefreshReg$(_c, \"FriendMessage\");","map":{"version":3,"names":["React","s","FriendMessage","props","message","id","friendMessage","friendImageAndText","user","name","avatar","friendText","friendName","friendMessageText","text","friendTime","time"],"sources":["/home/insight/incubator/Month2/HW2/src/s2-homeworks/hw01/friend-message/FriendMessage.tsx"],"sourcesContent":["import React from 'react'\nimport s from './FriendMessage.module.css'\nimport {MessageType} from \"../HW1\";\n\ntype FriendMessagePropsType = {\n  message: MessageType\n}\n\n// создать тип вместо any и отобразить приходящие данные\nconst FriendMessage = (props: FriendMessagePropsType) => {\n    return (\n        <div\n            id={'hw1-friend-message-' + props.message.id}\n            className={s.friendMessage}\n        >\n            <div className={s.friendImageAndText}>\n                <img\n                    id={'hw1-friend-avatar-' + props.message.id}\n                    alt={props.message.user.name}\n                    src={props.message.user.avatar}\n                />\n                <div className={s.friendText}>\n                    <div\n                        id={'hw1-friend-name-' + props.message.id}\n                        className={s.friendName}\n                    >\n                      {props.message.user.name}\n                    </div>\n                    <pre\n                        id={'hw1-friend-text-' + props.message.id}\n                        className={s.friendMessageText}\n                    >\n                        {props.message.message.text}\n                    </pre>\n                </div>\n            </div>\n            <div\n                id={'hw1-friend-time-' + props.message.id}\n                className={s.friendTime}\n            >\n              {props.message.message.time}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendMessage\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,4BAA4B;AAAA;AAO1C;AACA,MAAMC,aAAa,GAAIC,KAA6B,IAAK;EACrD,oBACI;IACI,EAAE,EAAE,qBAAqB,GAAGA,KAAK,CAACC,OAAO,CAACC,EAAG;IAC7C,SAAS,EAAEJ,CAAC,CAACK,aAAc;IAAA,wBAE3B;MAAK,SAAS,EAAEL,CAAC,CAACM,kBAAmB;MAAA,wBACjC;QACI,EAAE,EAAE,oBAAoB,GAAGJ,KAAK,CAACC,OAAO,CAACC,EAAG;QAC5C,GAAG,EAAEF,KAAK,CAACC,OAAO,CAACI,IAAI,CAACC,IAAK;QAC7B,GAAG,EAAEN,KAAK,CAACC,OAAO,CAACI,IAAI,CAACE;MAAO;QAAA;QAAA;QAAA;MAAA,QACjC,eACF;QAAK,SAAS,EAAET,CAAC,CAACU,UAAW;QAAA,wBACzB;UACI,EAAE,EAAE,kBAAkB,GAAGR,KAAK,CAACC,OAAO,CAACC,EAAG;UAC1C,SAAS,EAAEJ,CAAC,CAACW,UAAW;UAAA,UAEzBT,KAAK,CAACC,OAAO,CAACI,IAAI,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QACpB,eACN;UACI,EAAE,EAAE,kBAAkB,GAAGN,KAAK,CAACC,OAAO,CAACC,EAAG;UAC1C,SAAS,EAAEJ,CAAC,CAACY,iBAAkB;UAAA,UAE9BV,KAAK,CAACC,OAAO,CAACA,OAAO,CAACU;QAAI;UAAA;UAAA;UAAA;QAAA,QACzB;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MACI,EAAE,EAAE,kBAAkB,GAAGX,KAAK,CAACC,OAAO,CAACC,EAAG;MAC1C,SAAS,EAAEJ,CAAC,CAACc,UAAW;MAAA,UAEzBZ,KAAK,CAACC,OAAO,CAACA,OAAO,CAACY;IAAI;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KAnCKd,aAAa;AAqCnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}