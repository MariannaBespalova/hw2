{"ast":null,"code":"var _jsxFileName = \"/home/insight/incubator/Month2/HW2/src/s2-homeworks/hw03/GreetingContainer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Greeting from './Greeting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const pureAddUser = (name, setError, setName, addUserCallback) => {\n  if (name.trim() === '') {\n    setError('Ошибка! Введите имя!');\n  } else {\n    addUserCallback(name);\n    setName(name);\n  }\n  // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n};\n\nexport const pureOnBlur = (name, setError) => {// если имя пустое - показать ошибку\n};\nexport const pureOnEnter = (e, addUser) => {// если нажата кнопка Enter - добавить\n};\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\nconst GreetingContainer = _ref => {\n  _s();\n  let {\n    users,\n    addUserCallback\n  } = _ref;\n  // деструктуризация пропсов\n  const [name, setName] = useState(''); // need to fix any\n  const [error, setError] = useState(''); // need to fix any\n\n  const setNameCallback = e => {\n    setName(e.target.value);\n    error && setError('');\n  };\n  const addUser = () => {\n    pureAddUser(name, setError, setName, addUserCallback);\n  };\n  const onBlur = () => {\n    pureOnBlur(name, setError);\n  };\n  const onEnter = e => {\n    pureOnEnter(e, addUser);\n  };\n  const totalUsers = users.length; // need to fix\n  console.log(users);\n  const lastUserName = 'ddd';\n  return /*#__PURE__*/_jsxDEV(Greeting, {\n    name: name,\n    setNameCallback: setNameCallback,\n    addUser: addUser,\n    onBlur: onBlur,\n    onEnter: onEnter,\n    error: error,\n    totalUsers: totalUsers,\n    lastUserName: lastUserName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(GreetingContainer, \"Mg8nc8Hx6w0hPt/33E6mVppDUgo=\");\n_c = GreetingContainer;\nexport default GreetingContainer;\nvar _c;\n$RefreshReg$(_c, \"GreetingContainer\");","map":{"version":3,"names":["React","useState","Greeting","pureAddUser","name","setError","setName","addUserCallback","trim","pureOnBlur","pureOnEnter","e","addUser","GreetingContainer","users","error","setNameCallback","target","value","onBlur","onEnter","totalUsers","length","console","log","lastUserName"],"sources":["/home/insight/incubator/Month2/HW2/src/s2-homeworks/hw03/GreetingContainer.tsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\nimport Greeting from './Greeting'\nimport { UserType } from './HW3'\nimport user from \"../hw08/User\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name:string) => void // need to fix any\n}\n\nexport const pureAddUser = (name: string, setError: (error:string) => void, setName: React.Dispatch<React.SetStateAction<string>>, addUserCallback: (name:string) => void ) => {\n  if (name.trim() === '') {\n    setError('Ошибка! Введите имя!')\n  } else {\n    addUserCallback(name)\n    setName(name)\n\n  }\n    // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n}\n\nexport const pureOnBlur = (name: any, setError: any) => { // если имя пустое - показать ошибку\n}\n\nexport const pureOnEnter = (e: any, addUser: any) => { // если нажата кнопка Enter - добавить\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n    users,\n    addUserCallback,\n}) => {\n    // деструктуризация пропсов\n    const [name, setName] = useState<any>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.target.value)\n        error && setError('')\n    }\n    const addUser = () => {\n        pureAddUser(name, setError, setName, addUserCallback)\n    }\n\n    const onBlur = () => {\n        pureOnBlur(name, setError)\n    }\n\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        pureOnEnter(e, addUser)\n    }\n\n    const totalUsers = users.length // need to fix\n  console.log(users)\n    const lastUserName = 'ddd'\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            onBlur={onBlur}\n            onEnter={onEnter}\n            error={error}\n            totalUsers={totalUsers}\n            lastUserName={lastUserName}\n        />\n    )\n}\n\nexport default GreetingContainer\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAgCC,QAAQ,QAAQ,OAAO;AACnE,OAAOC,QAAQ,MAAM,YAAY;AAAA;AASjC,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAY,EAAEC,QAAgC,EAAEC,OAAqD,EAAEC,eAAsC,KAAM;EAC7K,IAAIH,IAAI,CAACI,IAAI,EAAE,KAAK,EAAE,EAAE;IACtBH,QAAQ,CAAC,sBAAsB,CAAC;EAClC,CAAC,MAAM;IACLE,eAAe,CAACH,IAAI,CAAC;IACrBE,OAAO,CAACF,IAAI,CAAC;EAEf;EACE;AACJ,CAAC;;AAED,OAAO,MAAMK,UAAU,GAAG,CAACL,IAAS,EAAEC,QAAa,KAAK,CAAE;AAAA,CACzD;AAED,OAAO,MAAMK,WAAW,GAAG,CAACC,CAAM,EAAEC,OAAY,KAAK,CAAE;AAAA,CACtD;;AAED;AACA;;AAEA;AACA,MAAMC,iBAAuD,GAAG,QAG1D;EAAA;EAAA,IAH2D;IAC7DC,KAAK;IACLP;EACJ,CAAC;EACG;EACA,MAAM,CAACH,IAAI,EAAEE,OAAO,CAAC,GAAGL,QAAQ,CAAM,EAAE,CAAC,EAAC;EAC1C,MAAM,CAACc,KAAK,EAAEV,QAAQ,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC,EAAC;;EAE/C,MAAMe,eAAe,GAAIL,CAAgC,IAAK;IAC1DL,OAAO,CAACK,CAAC,CAACM,MAAM,CAACC,KAAK,CAAC;IACvBH,KAAK,IAAIV,QAAQ,CAAC,EAAE,CAAC;EACzB,CAAC;EACD,MAAMO,OAAO,GAAG,MAAM;IAClBT,WAAW,CAACC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,eAAe,CAAC;EACzD,CAAC;EAED,MAAMY,MAAM,GAAG,MAAM;IACjBV,UAAU,CAACL,IAAI,EAAEC,QAAQ,CAAC;EAC9B,CAAC;EAED,MAAMe,OAAO,GAAIT,CAAkC,IAAK;IACpDD,WAAW,CAACC,CAAC,EAAEC,OAAO,CAAC;EAC3B,CAAC;EAED,MAAMS,UAAU,GAAGP,KAAK,CAACQ,MAAM,EAAC;EAClCC,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EAChB,MAAMW,YAAY,GAAG,KAAK;EAE1B,oBACI,QAAC,QAAQ;IACL,IAAI,EAAErB,IAAK;IACX,eAAe,EAAEY,eAAgB;IACjC,OAAO,EAAEJ,OAAQ;IACjB,MAAM,EAAEO,MAAO;IACf,OAAO,EAAEC,OAAQ;IACjB,KAAK,EAAEL,KAAM;IACb,UAAU,EAAEM,UAAW;IACvB,YAAY,EAAEI;EAAa;IAAA;IAAA;IAAA;EAAA,QAC7B;AAEV,CAAC;AAAA,GAxCKZ,iBAAuD;AAAA,KAAvDA,iBAAuD;AA0C7D,eAAeA,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}